!IF 0

Copyright (c) 1989  Microsoft Corporation

Module Name:

    sources.

Abstract:

    This file specifies the target component being built and the list of
    sources files needed to build that component.  Also specifies optional
    compiler switches and libraries that are unique for the component being
    built.


Author:

    Steve Wood (stevewo) 12-Apr-1990

NOTE:   Commented description of this file is in \nt\bak\bin\sources.tpl

!ENDIF


MAJORCOMP=spc
MINORCOMP=ntvdm

TARGETNAME=ntvdm
TARGETPATH=obj
TARGETTYPE=PROGLIB

EXEPROFILEINPUT=yes

MVDM_TREE=$(PROJECT_ROOT)\mvdm
SOFTPC_TREE=$(MVDM_TREE)\softpc.new

INCLUDES=                       \
    $(SOFTPC_TREE)\host\inc;    \
    $(SOFTPC_TREE)\base\inc

!IF $(MIPS)
GPSIZE=0
!ENDIF

!if $(X86)
TARGETLIBS=\
        $(SDK_LIB_PATH)\gdi32.lib       \
        $(WINDOWS_LIB_PATH)\user32p.lib \
        $(SDK_LIB_PATH)\ntdll.lib       \
        $(SDK_LIB_PATH)\advapi32.lib
!else
TARGETLIBS=\
        $(SDK_LIB_PATH)\binmode.obj     \
        $(SDK_LIB_PATH)\gdi32.lib       \
        $(WINDOWS_LIB_PATH)\user32p.lib \
        $(SDK_LIB_PATH)\ntdll.lib       \
        $(SDK_LIB_PATH)\advapi32.lib
!endif

BACKGROUND_USE=1

SYNCHRONIZE_DRAIN=1
SYNCHRONIZE_BLOCK=1

#
# X86 needs LINKLIBS set for the fuzzymatch code in the linker.
# MIPS and ALPHA need TARGETLIBS set so small.lib (CRTLIBS) will
# come *after* these libraries but before libc.lib.
#

!if $(X86)
LINKLIBS =                                                              \
     $(SOFTPC_TREE)\base\support$(ALT_PROJECT)\$(O)\MAIN.obj            \
     $(SOFTPC_TREE)\host\src$(ALT_PROJECT)\$(O)\FPRT.OBJ                \
     $(SOFTPC_TREE)\base\system$(ALT_PROJECT)\$(O)\SYSTEM.LIB           \
     $(SOFTPC_TREE)\base\bios$(ALT_PROJECT)\$(O)\BIOS.LIB               \
     $(SOFTPC_TREE)\base\video$(ALT_PROJECT)\$(O)\VIDEO.LIB             \
     $(SOFTPC_TREE)\base\dos$(ALT_PROJECT)\$(O)\DOS.LIB                 \
     $(SOFTPC_TREE)\base\comms$(ALT_PROJECT)\$(O)\COMMS.LIB             \
     $(SOFTPC_TREE)\base\debug$(ALT_PROJECT)\$(O)\DEBUG.LIB             \
     $(SOFTPC_TREE)\base\support$(ALT_PROJECT)\$(O)\SUPPORT.LIB         \
     $(SOFTPC_TREE)\base\disks$(ALT_PROJECT)\$(O)\DISKS.LIB             \
     $(SOFTPC_TREE)\base\keymouse$(ALT_PROJECT)\$(O)\KEYMOUSE.LIB       \
     $(SOFTPC_TREE)\host\src$(ALT_PROJECT)\$(O)\SRC.LIB                 \
     $(MVDM_TREE)\v86\monitor$(ALT_PROJECT)\$(O)\monitor.lib            \
     $(MVDM_TREE)\dos\dem$(ALT_PROJECT)\$(O)\dem.lib                    \
     $(MVDM_TREE)\dbg$(ALT_PROJECT_OBJS)\$(O)\dbg.lib                   \
     $(MVDM_TREE)\dos\command$(ALT_PROJECT)\$(O)\command.lib            \
     $(MVDM_TREE)\dpmi32$(ALT_PROJECT)\$(O)\dpmi32.lib                  \
     $(MVDM_TREE)\xms.486$(ALT_PROJECT)\$(O)\xms486.lib                 \
     $(MVDM_TREE)\suballoc\$(O)\suballoc.lib                            \
     $(MVDM_TREE)\oemuni\$(ALT_PROJECT)\$(O)\oemuni.lib
!else

#
# Pull these symbols in first.
#

LINKER_FLAGS=$(LINKER_FLAGS) -INCLUDE:__mb_cur_max -INCLUDE:_pctype

LINKLIBS = \
        $(SOFTPC_TREE)\base\support$(ALT_PROJECT)\$(O)\MAIN.obj         \
        $(SOFTPC_TREE)\host\src$(ALT_PROJECT)\$(O)\FPRT.OBJ             \
        $(SOFTPC_TREE)\host\src$(ALT_PROJECT)\$(O)\SRC.LIB              \
        $(SOFTPC_TREE)\base\system$(ALT_PROJECT)\$(O)\SYSTEM.LIB        \
        $(SOFTPC_TREE)\base\bios$(ALT_PROJECT)\$(O)\BIOS.LIB            \
        $(SOFTPC_TREE)\base\video$(ALT_PROJECT)\$(O)\VIDEO.LIB          \
        $(SOFTPC_TREE)\base\dos$(ALT_PROJECT)\$(O)\DOS.LIB              \
        $(SOFTPC_TREE)\base\comms$(ALT_PROJECT)\$(O)\COMMS.LIB          \
        $(SOFTPC_TREE)\base\debug$(ALT_PROJECT)\$(O)\DEBUG.LIB          \
        $(SOFTPC_TREE)\base\dasm386$(ALT_PROJECT)\$(O)\DASM386.LIB      \
        $(SOFTPC_TREE)\base\support$(ALT_PROJECT)\$(O)\SUPPORT.LIB      \
        $(SOFTPC_TREE)\base\disks$(ALT_PROJECT)\$(O)\DISKS.LIB          \
        $(SOFTPC_TREE)\base\keymouse$(ALT_PROJECT)\$(O)\KEYMOUSE.LIB    \
        $(CPULIBS)                                                      \
        $(MVDM_TREE)\dbg$(ALT_PROJECT)\$(O)\dbg.lib                     \
        $(MVDM_TREE)\dos\dem$(ALT_PROJECT)\$(O)\dem.lib                 \
        $(MVDM_TREE)\suballoc\$(O)\suballoc.lib                         \
        $(MVDM_TREE)\dos\command$(ALT_PROJECT)\$(O)\command.lib         \
        $(MVDM_TREE)\dpmi32$(ALT_PROJECT)\$(O)\dpmi32.lib               \
        $(MVDM_TREE)\xms.486$(ALT_PROJECT)\$(O)\xms486.lib              \
        $(MVDM_TREE)\oemuni\$(ALT_PROJECT)\$(O)\oemuni.lib
!endif

!if "$(NTDEBUG)" == ""
PD = Pd
!else
PD = Pg
!endif

# Decide whether to use assembler or C CPU.

!if "$(CCPU)" == ""
CPULIBS=$(SOFTPC_TREE)\*\libs\a4$(PD).lib
!else
CPULIBS=$(SOFTPC_TREE)\obj.vdm\$(O)\ccpu486.lib
!endif

SOURCES=ntvdm.c  \
        resource.rc

X86_SOURCES=
MIPS_SOURCES=
ALPHA_SOURCES=

!INCLUDE CDEFINE.INC

UMTYPE=console

#
# base at < 256 MB (0x10000000), so that softpc code buffer
# in allocated Virtual Memory (bottom up) is within
# near jump range to ntvdm's code.
#
UMBASE=0x0f000000

DLLDEF=$(O)\ntvdm.def

NO_SAFESEH=1
